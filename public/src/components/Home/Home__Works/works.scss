@import '../../App/global.scss';

.home__works {
  background: $white;
  max-width: 80%;
  margin: 0 auto;
  padding: 3em 1em;
  text-transform: uppercase;
}
$min-width: 15rem;

// 1. Add horizontal and vertical spacing between items.
// 2. Add vertical spacing between rows.
// 3. Make the order of image / text alternate.
// 4. Take all the available space.
// 5. Require at least this amount of space or wrap.
// 6. Prevent images from sticking to the right in single column mode.
// 7. (Try to) take as much space as the content needs.
.layout {
  display: flex;
  flex-wrap: wrap;
  margin-top: -1em; // 1
  margin-left: -3.5em; // 1
  align-items: center;
  
  &:not(:first-of-type) {
    margin-top: 3em; // 2
  }
  
  &:nth-child(odd) {
    flex-direction: row-reverse; // 3
  }
  
  &__item {
    padding-top: 1em; // 1
    padding-left: 3.5em; // 1
    
    &--body {
      flex-grow: 9999; // 4
      flex-basis: $min-width; // 5
    }
    
    &--figure {
      margin-right: auto; // 6
      flex-grow: 1; // 7

      // By using `max-content` we can get a little
      // nicer responsive behavior because the image
      // automatically shrinks if not enough space is
      // available, but also the column is not getting
      // to large than the image if a lot of space
      // is available.
      @supports (max-width: max-content) {
        min-width: $min-width; // 5
        max-width: max-content;
        flex-basis: $min-width; // 5
        flex-grow: 99999;
      }
    }
  }
}
// .home__works {
//   // width: 100%;
//   // padding: 10% 0;
//   // display: flex;
//   // flex-direction: column;
//   // justify-content: center;
// }
// .works__button {
//   border: 4px solid $black;
//   background: none;
//   padding: 5px 10px;
//   font-size: 40px;
//   text-transform: uppercase;

// }
.home__work__grid {
  display: grid;
  z-index: 0;
	grid-template-columns: repeat(6, 150px); 
  grid-template-rows: repeat(2, 200px);
  margin: 10% 0; 
  grid-template-areas:
              "image3 ... ... ..."
              "... ... ... image2";
}
.grid__image {
  border: 4px solid $darkGrey;
  // filter: brightness(.6);
  transition: filter .3s ease-in;
}
.grid__image--1 {
  width: 600px;
  height: auto;
  z-index: 2;
  grid-column: 2 / 3;
	grid-row: 1 / 2;
	// opacity: 0.8;
}

.grid__image--2 {
  width: 200px;
	grid-area: image2;
	margin: 0;
  z-index: 3;
  max-height: 350px;
  overflow: hidden;
  // margin-left: 20%;
}
.grid__image--3 {
  grid-area: image3;
  width: 300px;
  // margin-left: -40%;
  margin-top: 50%;
  z-index: 1;
}
// .grid__image:hover {
//   filter: none;
//   border-color: #9D0F5C;
// }
.home__work__title {
  font: 700 114px $rajdhani;
  text-align: center;
  // color: #b1b1b1;
  color: $black;
  // color: #BEBEBE;
  // position: absolute;
  // top: 50%;
  // left: -10%;
  // opacity: 0;
  transition: opacity .3s ease-in;
  // mix-blend-mode: darken;
}

// $min-width: 15rem;

// .layout {
//   display: flex;
//   flex-wrap: wrap;
//   margin-top: -1em; // 1
//   margin-left: -3.5em; // 1
//   align-items: center;
//   justify-content: center;
  
//   // &:not(:first-of-type) {
//   //   margin-top: 3em; // 2
//   // }
  
//   &:nth-child(odd) {
//     flex-direction: row-reverse; // 3
//   }
  
//   &__item {
//     // padding-top: 1em; // 1
//     // padding-left: 3.5em; // 1
    
//     &--body {
//       flex-grow: 9999; // 4
//       flex-basis: $min-width; // 5
//       align-items: center;
//     }
//   }
// }





